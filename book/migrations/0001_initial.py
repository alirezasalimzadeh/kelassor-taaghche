# Generated by Django 5.2.6 on 2025-09-21 18:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='ایمیل')),
                ('wallet', models.PositiveIntegerField(default=0, verbose_name='کیف پول')),
                ('is_unlimited', models.BooleanField(default=False, verbose_name='اشتراک بی نهایت')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='دسته بندی')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='book.category', verbose_name='دسته بندی والد')),
            ],
            options={
                'verbose_name': 'دسته بندی',
                'verbose_name_plural': 'دسته بندی ها',
            },
        ),
        migrations.CreateModel(
            name='AudioBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام کتاب')),
                ('author', models.CharField(max_length=100, verbose_name='نویسنده')),
                ('translator', models.CharField(blank=True, max_length=100, null=True, verbose_name='مترجم')),
                ('rate', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='امتیاز')),
                ('volume', models.FloatField(blank=True, null=True, verbose_name='حجم')),
                ('book_type', models.CharField(choices=[('epub', 'EPUB'), ('pdf', 'PDF'), ('mobi', 'MOBI'), ('mp3', 'MP3'), ('wav', 'WAV')], max_length=4, verbose_name='نوع')),
                ('price', models.PositiveIntegerField(verbose_name='قیمت')),
                ('is_discount', models.BooleanField(default=False, verbose_name='تخفیف دارد؟')),
                ('about', models.TextField(blank=True, null=True, verbose_name='معرفی کتاب')),
                ('description', models.TextField(blank=True, null=True, verbose_name='درباره کتاب')),
                ('speaker', models.CharField(max_length=100, verbose_name='گوینده')),
                ('time', models.PositiveIntegerField(default=0, verbose_name='زمان')),
                ('is_transferable', models.BooleanField(default=False, verbose_name='قابلیت انتقال دارد؟')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='audiobooks', to='book.category', verbose_name='دسته بندی')),
            ],
            options={
                'verbose_name': 'صوتی',
                'verbose_name_plural': 'صوتی',
            },
        ),
        migrations.CreateModel(
            name='PrintedBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام کتاب')),
                ('author', models.CharField(max_length=100, verbose_name='نویسنده')),
                ('translator', models.CharField(blank=True, max_length=100, null=True, verbose_name='مترجم')),
                ('rate', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='امتیاز')),
                ('volume', models.FloatField(blank=True, null=True, verbose_name='حجم')),
                ('book_type', models.CharField(choices=[('epub', 'EPUB'), ('pdf', 'PDF'), ('mobi', 'MOBI'), ('mp3', 'MP3'), ('wav', 'WAV')], max_length=4, verbose_name='نوع')),
                ('price', models.PositiveIntegerField(verbose_name='قیمت')),
                ('is_discount', models.BooleanField(default=False, verbose_name='تخفیف دارد؟')),
                ('about', models.TextField(blank=True, null=True, verbose_name='معرفی کتاب')),
                ('description', models.TextField(blank=True, null=True, verbose_name='درباره کتاب')),
                ('collector', models.CharField(blank=True, max_length=100, null=True, verbose_name='گرد آورنده')),
                ('publisher', models.CharField(max_length=100, verbose_name='انتشارات')),
                ('year', models.IntegerField(verbose_name='سال انتشار')),
                ('pages', models.IntegerField(verbose_name='تعداد صفحه ها')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', to='book.category', verbose_name='دسته بندی')),
            ],
            options={
                'verbose_name': 'کتاب',
                'verbose_name_plural': 'کتاب',
            },
        ),
    ]
